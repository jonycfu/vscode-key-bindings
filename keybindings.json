// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+shift+x",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "shift+cmd+right",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "shift+cmd+left",
    "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "shift+cmd+1",
    "command": "workbench.action.terminal.focusAtIndex1"
  },
  {
    "key": "shift+cmd+2",
    "command": "workbench.action.terminal.focusAtIndex2"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "list.focusFirstChild"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "list.focusLastChild"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.terminal.runSelectedText"
  },
  {
    "key": "cmd+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "cmd+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+l",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "cmd+k cmd+v",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "alt+cmd+1",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "cmd+[",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+d",
    "command": "editor.action.previewDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.previewDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+g ctrl+s",
    "command": "git.stageChange"
  },
  {
    "key": "ctrl+g ctrl+u",
    "command": "git.unstage"
  },
  {
    "key": "shift+alt+cmd+n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "vscode-icons.hideExplorerArrowsPreset"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+cmd+j",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "f13",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "f1",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "shift+cmd+r",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "shift+cmd+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+shift+=",
    "command": "workbench.action.terminal.newInActiveWorkspace"
  },
  {
    "key": "shift+alt+5",
    "command": "editor.emmet.action.matchTag"
  }
]